#include "opencv2/imgproc/imgproc.hpp"
#include "opencv2/highgui/highgui.hpp"
#include <stdlib.h>
#include <stdio.h>
#include <iostream>
#include <fstream>
#include <ctime>
using namespace cv;
using namespace std;

int main(int argc, char **argv)
{

 ofstream myfile;
time_t now = time(0);
string timeStamp=ctime(&now);
  

Mat source, gray;
double hu[7];
 Moments stop_cmoments;
double xbar,ybar;
int counter=1;
string filename="Moments_"+timeStamp+".csv";

while(1){

string file_name=argv[counter];
if(file_name=="z"){
	break;
}
source = imread(file_name);
cvtColor( source, gray, CV_BGR2GRAY );
stop_cmoments=moments(gray, false );
HuMoments(stop_cmoments,hu );
xbar=stop_cmoments.m10/stop_cmoments.m00;// Xbar= M10/M00
ybar=stop_cmoments.m01/stop_cmoments.m00;// Ybar= M01/M00
if(counter==1){
myfile.open (filename.c_str());
myfile<<"image,s00,s10,s01,s20,s11,s02,s30,s21,s12,s03,xbar,ybar,hu0,hu1,hu2,hu3,hu4,hu5,hu6"<<endl;
}
else{
myfile.open (filename.c_str(),fstream::app);
}
//<<"*****************Spatial Moments****************"<<endl
myfile<<file_name<<","
<<stop_cmoments.m00<<","
<<stop_cmoments.m10<<","
<<stop_cmoments.m01<<","
<< stop_cmoments.m20<<","
<< stop_cmoments.m11<<"," 
<<stop_cmoments.m02<<","
<< stop_cmoments.m30<<","
<< stop_cmoments.m21<<","
<< stop_cmoments.m12<<","
<< stop_cmoments.m03<<","
<<xbar<<","
<<ybar<<","
//<<"*****************Hu Moments****************"<<endl
for(int i=0;i<7;i++){
myfile<<hu[i]<<',';
}
myfile<<endl;
myfile.close();
counter++;
}
cout<<"SUCCESS!"<<endl;
return 0;
}

